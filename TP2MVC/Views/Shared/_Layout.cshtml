<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mon application ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Nom de l'application", "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Accueil", "Index", "Home")</li>
                    <li>@Html.ActionLink("À propos de", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_Login")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
<script>

    $(document).ready(function () { ResetSessionTimeOut(); });

    var onMinuteCountDown = 60;
    var timeLeft = 0;

    function ResetSessionTimeOut() {
        timeLeft = 0;
        $("#TimeOutDisplay").text("");
        var sessionTimeout = (parseInt(@Session.Timeout) - 1) * 60 * 1000;
        var triggerTimeOut = (parseInt(@Session.Timeout) - 2) * 60 * 1000;
        var sessionActive = (parseInt(@Session.Count));

        if (sessionActive > 0) {
            if (triggerTimeOut >= 1000)
                setTimeout(TriggerCountDown, triggerTimeOut);
            else
                TriggerCountDown();
            setTimeout(SessionEnd, sessionTimeout);
        }
    }

    function TriggerCountDown() {
        timeLeft = onMinuteCountDown;
        setInterval(ShowTimeOutCountDown, 1000);
    }

    function ShowTimeOutCountDown() {
        if (timeLeft > 0) {
            $("#TimeOutDisplay").text("expiration dans " + timeLeft + " secondes");
            timeLeft--;
        }
        else
        {
            $("#TimeOutDisplay").text("");
        }
    }
    function SessionEnd() {
        window.location = "@Url.Action("LogOff", "Account")";
    }
</script>