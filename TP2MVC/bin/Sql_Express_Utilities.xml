<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sql_Express_Utilities</name>
    </assembly>
    <members>
        <member name="T:Sql_Express_Utilities.SqlExpressWrapper`1">
            <summary>
            This abstract class is dedicated to give access to CRUD queries on a specific target table of a database.
            <para>It assumed that the first field of the target table if named "Id" of type int IDENTITY(1,1)</para>
            <para>The derived user class should be named with target table name.</para>
            <para>The provided type T must be another user class which properties correspond to target table record fields:</para>
            <para>  public class Record</para>
            <para>  {</para>
            <para>      public int Id {get; set;}  IMPORTANT: the first member has to be of type int and named Id</para>
            <para>      public Type Field_name_1 {get; set;}</para>
            <para>      public Type Field_name_2 {get; set;}</para>
            <para>      ...</para>
            <para>      public Type Field_name_n {get; set;}</para>
            <para></para>
            <para>      public Record() {} // default constructor</para>
            <para>  }</para>
            <para></para>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.#ctor(System.Object,System.Boolean)">
            <summary>
            Constructor with connectionString
            <para>Sql Express V12</para>
            <para>String BDFI = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename='" + DB_Path + "'; Integrated Security=true;Max Pool Size=1024;Pooling=true;";</para>
            <para>Sql Express V11</para>
            <para>String BDFI = @"Data Source=(LocalDB)\v11.0;AttachDbFilename='" + DB_Path + "'; Integrated Security=true;Max Pool Size=1024;Pooling=true;";</para>
            </summary>
            <param name="connectionString">connectionString that specify the database to connect with.</param>
            <param name="cache">Optional set to false. If set to true a internal dictionary of items of type T will be maintained.</param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.SetCacheSQL(System.String)">
            <summary>
            Override the defaut SQL query SELECT * FROM [derived user class name]
            <para>used to maintain the cache that hold the list of items of type T.</para>
            </summary>
            <param name="SQL"></param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.SetCache(System.Boolean,System.String)">
            <summary>
            Specify the used of a cache or not
            </summary>
            <param name="activate">If true, activate the use of a cache that hold a list of items of type T</param>
            <param name="SQL">Override the defaut SQL query SELECT * FROM [derived user class name]</param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.ToDictionary(System.String)">
            <summary>
            Returns a list of items of type T from the last query to database.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="orderBy">Optional sql order by clause</param>
            <returns></returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.ToList(System.String)">
            <summary>
            Returns a list of items of type T from the last query to database.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="orderBy">Optional sql order by clause</param>
            <returns></returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.GetQuerySQL(System.String)">
            <summary>
            Return a list of items from of type T from the SQL query to the database.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="SQL">SQL query</param>
            <returns>List of objects of type T.</returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.Get(System.Int32)">
            <summary>
            Return a item of type T that correspond to the target table record of id = Id.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="ID">the desired item of type T where id = Id</param>
            <returns>Object of type T.</returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.GetByFieldName(System.String,System.Object,System.String)">
            <summary>
            Return a item of type T that correspond to the target table records where FieldName = value.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="FieldName"></param>
            <param name="value"></param>
            <param name="orderBy"></param>
            <returns>list of objects of type T.</returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.GetByPeriod(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Return a list of items of type T that correspond to the target table records where 
            <para>DateTimeFieldName &gt;= min and DateTimeFieldName &lt;= max </para>
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="DateTimeFieldName"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="orderBy"></param>
            <returns>list of objects of type T.</returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.Add(System.Object)">
            <summary>
            Add a new record in the target table using the data from record of type T.
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <param name="record">item of type T.</param>
            <returns>the Id of the newly added record.</returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.Update(System.Object)">
            <summary>
            Update a record in the target table using the data from record of type T.
            </summary>
            <param name="record">Object of type T.</param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.Delete(System.Int32)">
            <summary>
            Delete a record from the target table where id = Id.
            <para>Override this method if you want to make extra delete treatments.</para>
            </summary>
            <param name="ID">The record Id to delete.</param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.DeleteByFieldName(System.String,System.Object)">
            <summary>
            Delete records from the target table where fieldName = value.
            </summary>
            <param name="fieldName">the target field name of target table</param>
            <param name="value">a value that must have the same type of the target field type.</param>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.GetCache">
            <summary>
            Return the list of items of type T issued by the last SQL query stored in the cache.
            <para>This method is usefull only if the cache is activated.</para>
            <para>The type T is provided at instanciation of derived SqlExpressWrapper class.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sql_Express_Utilities.SqlExpressWrapper`1.NonQuerySQL(System.String)">
            <summary>
            Submit a sql command.
            </summary>
            <param name="sqlCommand"></param>
        </member>
        <member name="P:Sql_Express_Utilities.SqlExpressWrapper`1.LastUpdate">
            <summary>
            Provides the datetime of the last update of cache
            </summary>
        </member>
    </members>
</doc>
